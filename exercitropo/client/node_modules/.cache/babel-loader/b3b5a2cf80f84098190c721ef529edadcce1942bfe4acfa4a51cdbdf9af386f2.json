{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\loren\\\\Documents\\\\vscode\\\\Chatbot\\\\Chatbot\\\\client\\\\src\\\\pages\\\\Task1.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Task1 = () => {\n  _s();\n  const [inputMessage, setInputMessage] = useState('');\n  const [chatMessages, setChatMessages] = useState([]);\n\n  // Function to handle sending messages\n  const handleSendMessage = async () => {\n    if (inputMessage.trim() === '') return;\n\n    // Add user message to chat\n    const newMessage = {\n      sender: 'user',\n      text: inputMessage.trim()\n    };\n    setChatMessages(prevMessages => [...prevMessages, newMessage]); // Append new message to existing messages\n    setInputMessage(''); // Clear input field\n\n    try {\n      // Send message to backend and get bot response\n      const botResponse = await axios.get(`/get`, {\n        params: {\n          msg: inputMessage.trim()\n        }\n      });\n      const botMessage = {\n        sender: 'bot',\n        text: botResponse.data\n      };\n      setChatMessages(prevMessages => [...prevMessages, botMessage]); // Append bot response to existing messages\n    } catch (error) {\n      console.error('Error sending message to bot:', error);\n    }\n  };\n\n  // Effect to scroll to bottom of chat box on update\n  useEffect(() => {\n    const chatBox = document.getElementById('chat-box');\n    if (chatBox) {\n      chatBox.scrollTop = chatBox.scrollHeight;\n    }\n  }, [chatMessages]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"This is Task1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"It starts with a story. Use the chatbot bar below to solve a game about the metaphor!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"chat-box\",\n      style: {\n        border: '1px solid #ccc',\n        padding: '10px',\n        minHeight: '200px',\n        marginBottom: '10px',\n        overflowY: 'auto'\n      },\n      children: chatMessages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '5px',\n          textAlign: message.sender === 'user' ? 'right' : 'left'\n        },\n        children: [message.sender === 'user' ? /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: 'blue'\n          },\n          children: \"You:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: 'green'\n          },\n          children: \"Bot:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }, this), ' ', message.text]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        style: {\n          flex: '1',\n          marginRight: '10px',\n          padding: '5px'\n        },\n        placeholder: \"Type your message...\",\n        value: inputMessage,\n        onChange: e => setInputMessage(e.target.value),\n        onKeyDown: e => {\n          if (e.key === 'Enter' && !e.shiftKey) {\n            e.preventDefault();\n            handleSendMessage();\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          padding: '5px 10px',\n          cursor: 'pointer'\n        },\n        onClick: handleSendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(Task1, \"C63IGJgBeAMWtehukeqgq6ibkuw=\");\n_c = Task1;\nexport default Task1;\nvar _c;\n$RefreshReg$(_c, \"Task1\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Task1","_s","inputMessage","setInputMessage","chatMessages","setChatMessages","handleSendMessage","trim","newMessage","sender","text","prevMessages","botResponse","get","params","msg","botMessage","data","error","console","chatBox","document","getElementById","scrollTop","scrollHeight","children","fileName","_jsxFileName","lineNumber","columnNumber","id","style","border","padding","minHeight","marginBottom","overflowY","map","message","index","textAlign","color","display","flex","marginRight","placeholder","value","onChange","e","target","onKeyDown","key","shiftKey","preventDefault","cursor","onClick","_c","$RefreshReg$"],"sources":["C:/Users/loren/Documents/vscode/Chatbot/Chatbot/client/src/pages/Task1.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Task1 = () => {\r\n  const [inputMessage, setInputMessage] = useState('');\r\n  const [chatMessages, setChatMessages] = useState([]);\r\n\r\n  // Function to handle sending messages\r\n  const handleSendMessage = async () => {\r\n    if (inputMessage.trim() === '') return;\r\n\r\n    // Add user message to chat\r\n    const newMessage = {\r\n      sender: 'user',\r\n      text: inputMessage.trim(),\r\n    };\r\n    setChatMessages(prevMessages => [...prevMessages, newMessage]); // Append new message to existing messages\r\n    setInputMessage(''); // Clear input field\r\n\r\n    try {\r\n      // Send message to backend and get bot response\r\n      const botResponse = await axios.get(`/get`, { params: { msg: inputMessage.trim() } });\r\n      const botMessage = {\r\n        sender: 'bot',\r\n        text: botResponse.data,\r\n      };\r\n      setChatMessages(prevMessages => [...prevMessages, botMessage]); // Append bot response to existing messages\r\n    } catch (error) {\r\n      console.error('Error sending message to bot:', error);\r\n    }\r\n  };\r\n\r\n  // Effect to scroll to bottom of chat box on update\r\n  useEffect(() => {\r\n    const chatBox = document.getElementById('chat-box');\r\n    if (chatBox) {\r\n      chatBox.scrollTop = chatBox.scrollHeight;\r\n    }\r\n  }, [chatMessages]);\r\n\r\n  return (\r\n    <div>\r\n      <h1>This is Task1</h1>\r\n      <p>It starts with a story. Use the chatbot bar below to solve a game about the metaphor!</p>\r\n\r\n      <div id=\"chat-box\" style={{ border: '1px solid #ccc', padding: '10px', minHeight: '200px', marginBottom: '10px', overflowY: 'auto' }}>\r\n        {chatMessages.map((message, index) => (\r\n          <div key={index} style={{ marginBottom: '5px', textAlign: message.sender === 'user' ? 'right' : 'left' }}>\r\n            {message.sender === 'user' ? (\r\n              <span style={{ color: 'blue' }}>You:</span>\r\n            ) : (\r\n              <span style={{ color: 'green' }}>Bot:</span>\r\n            )}{' '}\r\n            {message.text}\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <div style={{ display: 'flex' }}>\r\n        <textarea\r\n          style={{ flex: '1', marginRight: '10px', padding: '5px' }}\r\n          placeholder=\"Type your message...\"\r\n          value={inputMessage}\r\n          onChange={(e) => setInputMessage(e.target.value)}\r\n          onKeyDown={(e) => {\r\n            if (e.key === 'Enter' && !e.shiftKey) {\r\n              e.preventDefault();\r\n              handleSendMessage();\r\n            }\r\n          }}\r\n        />\r\n        <button\r\n          style={{ padding: '5px 10px', cursor: 'pointer' }}\r\n          onClick={handleSendMessage}\r\n        >\r\n          Send\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Task1;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACS,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;;EAEpD;EACA,MAAMW,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpC,IAAIJ,YAAY,CAACK,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;;IAEhC;IACA,MAAMC,UAAU,GAAG;MACjBC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAER,YAAY,CAACK,IAAI,CAAC;IAC1B,CAAC;IACDF,eAAe,CAACM,YAAY,IAAI,CAAC,GAAGA,YAAY,EAAEH,UAAU,CAAC,CAAC,CAAC,CAAC;IAChEL,eAAe,CAAC,EAAE,CAAC,CAAC,CAAC;;IAErB,IAAI;MACF;MACA,MAAMS,WAAW,GAAG,MAAMf,KAAK,CAACgB,GAAG,CAAC,MAAM,EAAE;QAAEC,MAAM,EAAE;UAAEC,GAAG,EAAEb,YAAY,CAACK,IAAI,CAAC;QAAE;MAAE,CAAC,CAAC;MACrF,MAAMS,UAAU,GAAG;QACjBP,MAAM,EAAE,KAAK;QACbC,IAAI,EAAEE,WAAW,CAACK;MACpB,CAAC;MACDZ,eAAe,CAACM,YAAY,IAAI,CAAC,GAAGA,YAAY,EAAEK,UAAU,CAAC,CAAC,CAAC,CAAC;IAClE,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACvD;EACF,CAAC;;EAED;EACAtB,SAAS,CAAC,MAAM;IACd,MAAMwB,OAAO,GAAGC,QAAQ,CAACC,cAAc,CAAC,UAAU,CAAC;IACnD,IAAIF,OAAO,EAAE;MACXA,OAAO,CAACG,SAAS,GAAGH,OAAO,CAACI,YAAY;IAC1C;EACF,CAAC,EAAE,CAACpB,YAAY,CAAC,CAAC;EAElB,oBACEL,OAAA;IAAA0B,QAAA,gBACE1B,OAAA;MAAA0B,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtB9B,OAAA;MAAA0B,QAAA,EAAG;IAAqF;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAE5F9B,OAAA;MAAK+B,EAAE,EAAC,UAAU;MAACC,KAAK,EAAE;QAAEC,MAAM,EAAE,gBAAgB;QAAEC,OAAO,EAAE,MAAM;QAAEC,SAAS,EAAE,OAAO;QAAEC,YAAY,EAAE,MAAM;QAAEC,SAAS,EAAE;MAAO,CAAE;MAAAX,QAAA,EAClIrB,YAAY,CAACiC,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBAC/BxC,OAAA;QAAiBgC,KAAK,EAAE;UAAEI,YAAY,EAAE,KAAK;UAAEK,SAAS,EAAEF,OAAO,CAAC7B,MAAM,KAAK,MAAM,GAAG,OAAO,GAAG;QAAO,CAAE;QAAAgB,QAAA,GACtGa,OAAO,CAAC7B,MAAM,KAAK,MAAM,gBACxBV,OAAA;UAAMgC,KAAK,EAAE;YAAEU,KAAK,EAAE;UAAO,CAAE;UAAAhB,QAAA,EAAC;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,gBAE3C9B,OAAA;UAAMgC,KAAK,EAAE;YAAEU,KAAK,EAAE;UAAQ,CAAE;UAAAhB,QAAA,EAAC;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAC5C,EAAE,GAAG,EACLS,OAAO,CAAC5B,IAAI;MAAA,GANL6B,KAAK;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAOV,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAEN9B,OAAA;MAAKgC,KAAK,EAAE;QAAEW,OAAO,EAAE;MAAO,CAAE;MAAAjB,QAAA,gBAC9B1B,OAAA;QACEgC,KAAK,EAAE;UAAEY,IAAI,EAAE,GAAG;UAAEC,WAAW,EAAE,MAAM;UAAEX,OAAO,EAAE;QAAM,CAAE;QAC1DY,WAAW,EAAC,sBAAsB;QAClCC,KAAK,EAAE5C,YAAa;QACpB6C,QAAQ,EAAGC,CAAC,IAAK7C,eAAe,CAAC6C,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QACjDI,SAAS,EAAGF,CAAC,IAAK;UAChB,IAAIA,CAAC,CAACG,GAAG,KAAK,OAAO,IAAI,CAACH,CAAC,CAACI,QAAQ,EAAE;YACpCJ,CAAC,CAACK,cAAc,CAAC,CAAC;YAClB/C,iBAAiB,CAAC,CAAC;UACrB;QACF;MAAE;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eACF9B,OAAA;QACEgC,KAAK,EAAE;UAAEE,OAAO,EAAE,UAAU;UAAEqB,MAAM,EAAE;QAAU,CAAE;QAClDC,OAAO,EAAEjD,iBAAkB;QAAAmB,QAAA,EAC5B;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC5B,EAAA,CA7EID,KAAK;AAAAwD,EAAA,GAALxD,KAAK;AA+EX,eAAeA,KAAK;AAAC,IAAAwD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}