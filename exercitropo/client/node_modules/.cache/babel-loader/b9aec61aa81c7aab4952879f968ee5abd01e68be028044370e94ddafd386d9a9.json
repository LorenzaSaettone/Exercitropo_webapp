{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\loren\\\\Documents\\\\vscode\\\\Exercitropo\\\\exercitropo\\\\client\\\\src\\\\pages\\\\ExerciTropo.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../styles/ExerciTropo.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExerciTropo = () => {\n  _s();\n  const [index, setIndex] = useState(0);\n  const [chatMessages, setChatMessages] = useState([{\n    type: 'bot',\n    message: \"Piacere io sono un trainer metaforico. Il gioco consiste di vari livelli. In questa prima fase dovrai semplicemente descrivere le immagini, dettagliando cosa vedi, elencando le varie caratteristiche dei soggetti rappresentati... Io per adesso non esprimerò alcun giudizio, confermandoti se hai fatto bene o no\"\n  }]);\n  const [userInput, setUserInput] = useState('');\n  const [loading, setLoading] = useState(false);\n  const nextImage = async () => {\n    setIndex(prevIndex => prevIndex + 1);\n    setChatMessages([]);\n    try {\n      const response = await fetch(`/set_image?msg=${index + 1}`);\n      const data = await response.json();\n      setChatMessages([{\n        type: 'bot',\n        message: \"In questa prima fase dovrai semplicemente descrivere le immagini, dettagliando cosa vedi, elencando le varie caratteristiche dei soggetti rappresentati... Io per adesso non esprimerò alcun giudizio, confermandoti se hai fatto bene o no\"\n      }]);\n    } catch (error) {\n      console.error('Error fetching next image:', error);\n    }\n  };\n  const goBackImage = async () => {\n    if (index > 0) {\n      // Prevent going below index 0\n      setIndex(prevIndex => prevIndex - 1);\n      setChatMessages([]);\n      try {\n        const response = await fetch(`/set_again_image?msg=${index - 1}`);\n        const data = await response.json();\n        setChatMessages([{\n          type: 'bot',\n          message: \"In questa prima fase dovrai semplicemente descrivere le immagini, dettagliando cosa vedi, elencando le varie caratteristiche dei soggetti rappresentati... Io per adesso non esprimerò alcun giudizio, confermandoti se hai fatto bene o no\"\n        }]);\n      } catch (error) {\n        console.error('Error fetching previous image:', error);\n      }\n    }\n  };\n  const getBotResponse = async () => {\n    const rawText = userInput;\n    setChatMessages([...chatMessages, {\n      type: 'user',\n      message: rawText\n    }]);\n    setUserInput('');\n    setLoading(true);\n    try {\n      const response = await fetch(`/get?msg=${rawText}`);\n      const data = await response.text();\n      setChatMessages(prevMessages => [...prevMessages, {\n        type: 'bot',\n        message: data\n      }]);\n    } catch (error) {\n      console.error('Error fetching bot response:', error);\n    }\n    setLoading(false);\n  };\n  const handleKeyPress = e => {\n    if (e.which === 13) {\n      getBotResponse();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"L'ExerciTropo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"subtitle\",\n      children: \"Questo \\xE8 un training metaforico\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"bottone\",\n        onClick: goBackImage,\n        disabled: index === 0,\n        children: \"Indietro\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"bottone\",\n        onClick: nextImage,\n        children: \"Avanti\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-container\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        id: \"myImage\",\n        src: `/images/${index}.png`,\n        alt: \"immagine\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"boxed\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"chatbox\",\n        children: chatMessages.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"p\", {\n          className: msg.type === 'bot' ? 'botText' : 'userText',\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: msg.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this)\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"userInput\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"textInput\",\n          type: \"text\",\n          name: \"msg\",\n          placeholder: \"Message\",\n          value: userInput,\n          onChange: e => setUserInput(e.target.value),\n          onKeyPress: handleKeyPress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), loading && /*#__PURE__*/_jsxDEV(\"img\", {\n        id: \"loadingGif\",\n        src: \"/images/loading-4802_128.gif\",\n        alt: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s(ExerciTropo, \"iwnjXzBz8kv7fJij67bvuvy/Wpk=\");\n_c = ExerciTropo;\nexport default ExerciTropo;\nvar _c;\n$RefreshReg$(_c, \"ExerciTropo\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ExerciTropo","_s","index","setIndex","chatMessages","setChatMessages","type","message","userInput","setUserInput","loading","setLoading","nextImage","prevIndex","response","fetch","data","json","error","console","goBackImage","getBotResponse","rawText","text","prevMessages","handleKeyPress","e","which","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","id","src","alt","map","msg","idx","name","placeholder","value","onChange","target","onKeyPress","_c","$RefreshReg$"],"sources":["C:/Users/loren/Documents/vscode/Exercitropo/exercitropo/client/src/pages/ExerciTropo.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport '../styles/ExerciTropo.css';\r\n\r\nconst ExerciTropo = () => {\r\n  const [index, setIndex] = useState(0);\r\n  const [chatMessages, setChatMessages] = useState([\r\n    {\r\n      type: 'bot',\r\n      message: \"Piacere io sono un trainer metaforico. Il gioco consiste di vari livelli. In questa prima fase dovrai semplicemente descrivere le immagini, dettagliando cosa vedi, elencando le varie caratteristiche dei soggetti rappresentati... Io per adesso non esprimerò alcun giudizio, confermandoti se hai fatto bene o no\",\r\n    },\r\n  ]);\r\n  const [userInput, setUserInput] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const nextImage = async () => {\r\n    setIndex(prevIndex => prevIndex + 1);\r\n    setChatMessages([]);\r\n    try {\r\n      const response = await fetch(`/set_image?msg=${index + 1}`);\r\n      const data = await response.json();\r\n      setChatMessages([\r\n        {\r\n          type: 'bot',\r\n          message: \"In questa prima fase dovrai semplicemente descrivere le immagini, dettagliando cosa vedi, elencando le varie caratteristiche dei soggetti rappresentati... Io per adesso non esprimerò alcun giudizio, confermandoti se hai fatto bene o no\",\r\n        },\r\n      ]);\r\n    } catch (error) {\r\n      console.error('Error fetching next image:', error);\r\n    }\r\n  };\r\n\r\n  const goBackImage = async () => {\r\n    if (index > 0) { // Prevent going below index 0\r\n      setIndex(prevIndex => prevIndex - 1);\r\n      setChatMessages([]);\r\n      try {\r\n        const response = await fetch(`/set_again_image?msg=${index - 1}`);\r\n        const data = await response.json();\r\n        setChatMessages([\r\n          {\r\n            type: 'bot',\r\n            message: \"In questa prima fase dovrai semplicemente descrivere le immagini, dettagliando cosa vedi, elencando le varie caratteristiche dei soggetti rappresentati... Io per adesso non esprimerò alcun giudizio, confermandoti se hai fatto bene o no\",\r\n          },\r\n        ]);\r\n      } catch (error) {\r\n        console.error('Error fetching previous image:', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const getBotResponse = async () => {\r\n    const rawText = userInput;\r\n    setChatMessages([...chatMessages, { type: 'user', message: rawText }]);\r\n    setUserInput('');\r\n    setLoading(true);\r\n    try {\r\n      const response = await fetch(`/get?msg=${rawText}`);\r\n      const data = await response.text();\r\n      setChatMessages(prevMessages => [\r\n        ...prevMessages,\r\n        { type: 'bot', message: data },\r\n      ]);\r\n    } catch (error) {\r\n      console.error('Error fetching bot response:', error);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const handleKeyPress = (e) => {\r\n    if (e.which === 13) {\r\n      getBotResponse();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1 className=\"title\">L'ExerciTropo</h1>\r\n      <h4 className=\"subtitle\">Questo è un training metaforico</h4>\r\n      <div className=\"button-container\">\r\n        <button className=\"bottone\" onClick={goBackImage} disabled={index === 0}>Indietro</button>\r\n        <button className=\"bottone\" onClick={nextImage}>Avanti</button>\r\n      </div>\r\n      <div className=\"image-container\">\r\n        <img id=\"myImage\" src={`/images/${index}.png`} alt=\"immagine\" />\r\n      </div>\r\n      <div className=\"boxed\">\r\n        <div id=\"chatbox\">\r\n          {chatMessages.map((msg, idx) => (\r\n            <p key={idx} className={msg.type === 'bot' ? 'botText' : 'userText'}>\r\n              <span>{msg.message}</span>\r\n            </p>\r\n          ))}\r\n        </div>\r\n        <div id=\"userInput\">\r\n          <input\r\n            id=\"textInput\"\r\n            type=\"text\"\r\n            name=\"msg\"\r\n            placeholder=\"Message\"\r\n            value={userInput}\r\n            onChange={(e) => setUserInput(e.target.value)}\r\n            onKeyPress={handleKeyPress}\r\n          />\r\n        </div>\r\n        {loading && <img id=\"loadingGif\" src=\"/images/loading-4802_128.gif\" alt=\"Loading...\" />}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExerciTropo;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}