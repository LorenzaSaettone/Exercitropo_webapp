{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\loren\\\\Documents\\\\vscode\\\\Chatbot\\\\Chatbot\\\\client\\\\src\\\\pages\\\\Task2.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport image from '../images/Lara.jpg';\nimport image2 from '../images/Queen.png'; // Adjust the path to be relative to the current file location\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Task2 = () => {\n  _s();\n  const [error, setError] = useState('');\n  useEffect(() => {\n    // Verifica se ci sono errori e aggiorna lo stato\n    axios.get('/task2/error').then(response => {\n      setError(response.data.error || '');\n    }).catch(error => {\n      console.error('Error fetching task2 error:', error);\n      setError('An error occurred while fetching error information.');\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Task2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Bisogna premere l'immagine che pi\\xF9 si alla metafora!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/Task3\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: image,\n        alt: \"Lara\",\n        style: {\n          cursor: 'pointer'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/Task2errore\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: image2,\n        alt: \"Gatto\",\n        style: {\n          cursor: 'pointer'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(Task2, \"AzAS/3yAg/YB9dPSCQtp4rtni54=\");\n_c = Task2;\nexport default Task2;\nvar _c;\n$RefreshReg$(_c, \"Task2\");","map":{"version":3,"names":["React","useState","useEffect","Link","axios","image","image2","jsxDEV","_jsxDEV","Task2","_s","error","setError","get","then","response","data","catch","console","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","to","src","alt","cursor","_c","$RefreshReg$"],"sources":["C:/Users/loren/Documents/vscode/Chatbot/Chatbot/client/src/pages/Task2.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport image from '../images/Lara.jpg';\r\nimport image2 from '../images/Queen.png'; // Adjust the path to be relative to the current file location\r\n\r\nconst Task2 = () => {\r\n  const [error, setError] = useState('');\r\n\r\n  useEffect(() => {\r\n    // Verifica se ci sono errori e aggiorna lo stato\r\n    axios.get('/task2/error')\r\n      .then(response => {\r\n        setError(response.data.error || '');\r\n      })\r\n      .catch(error => {\r\n        console.error('Error fetching task2 error:', error);\r\n        setError('An error occurred while fetching error information.');\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Task2</h1>\r\n      <p>Bisogna premere l'immagine che pi√π si alla metafora!</p>\r\n      {error && <p style={{ color: 'red' }}>{error}</p>}\r\n      <Link to=\"/Task3\">\r\n        <img src={image} alt=\"Lara\" style={{ cursor: 'pointer' }} />\r\n      </Link>\r\n      <Link to=\"/Task2errore\">\r\n        <img src={image2} alt=\"Gatto\" style={{ cursor: 'pointer' }} />\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Task2;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,MAAM,MAAM,qBAAqB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACd;IACAE,KAAK,CAACS,GAAG,CAAC,cAAc,CAAC,CACtBC,IAAI,CAACC,QAAQ,IAAI;MAChBH,QAAQ,CAACG,QAAQ,CAACC,IAAI,CAACL,KAAK,IAAI,EAAE,CAAC;IACrC,CAAC,CAAC,CACDM,KAAK,CAACN,KAAK,IAAI;MACdO,OAAO,CAACP,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACnDC,QAAQ,CAAC,qDAAqD,CAAC;IACjE,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEJ,OAAA;IAAAW,QAAA,gBACEX,OAAA;MAAAW,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACdf,OAAA;MAAAW,QAAA,EAAG;IAAoD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,EAC1DZ,KAAK,iBAAIH,OAAA;MAAGgB,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAM,CAAE;MAAAN,QAAA,EAAER;IAAK;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjDf,OAAA,CAACL,IAAI;MAACuB,EAAE,EAAC,QAAQ;MAAAP,QAAA,eACfX,OAAA;QAAKmB,GAAG,EAAEtB,KAAM;QAACuB,GAAG,EAAC,MAAM;QAACJ,KAAK,EAAE;UAAEK,MAAM,EAAE;QAAU;MAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxD,CAAC,eACPf,OAAA,CAACL,IAAI;MAACuB,EAAE,EAAC,cAAc;MAAAP,QAAA,eACrBX,OAAA;QAAKmB,GAAG,EAAErB,MAAO;QAACsB,GAAG,EAAC,OAAO;QAACJ,KAAK,EAAE;UAAEK,MAAM,EAAE;QAAU;MAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1D,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAACb,EAAA,CA5BID,KAAK;AAAAqB,EAAA,GAALrB,KAAK;AA8BX,eAAeA,KAAK;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}