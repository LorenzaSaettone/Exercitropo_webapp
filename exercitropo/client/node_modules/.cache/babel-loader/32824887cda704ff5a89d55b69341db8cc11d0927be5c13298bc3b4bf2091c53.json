{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\loren\\\\Documents\\\\vscode\\\\Chatbot\\\\Chatbot\\\\client\\\\src\\\\pages\\\\Task1.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Task1 = () => {\n  _s();\n  const [inputMessage, setInputMessage] = useState('');\n  const [chatMessages, setChatMessages] = useState([]);\n  const handleInputChange = e => {\n    setInputMessage(e.target.value);\n  };\n  const handleSendMessage = async () => {\n    if (inputMessage.trim() === '') return;\n\n    // Add user message to chat\n    const newMessage = {\n      sender: 'user',\n      text: inputMessage.trim()\n    };\n    setChatMessages([...chatMessages, newMessage]);\n    setInputMessage('');\n\n    // Simulate bot response (replace with actual API call if integrating with a backend)\n    try {\n      const botResponse = await axios.post('/chatbot', {\n        message: inputMessage\n      });\n      const botMessage = {\n        sender: 'bot',\n        text: botResponse.data.message\n      };\n      setChatMessages([...chatMessages, botMessage]);\n    } catch (error) {\n      console.error('Error sending message to bot:', error);\n      // Handle error if needed\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"This is Task1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"It starts with a story. Use the chatbot bar below to solve a game about the metaphor!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: '1px solid #ccc',\n        padding: '10px',\n        minHeight: '200px',\n        marginBottom: '10px',\n        overflowY: 'auto'\n      },\n      children: chatMessages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '5px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [message.sender === 'user' ? 'You' : 'Bot', \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), \" \", message.text]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        style: {\n          flex: '1',\n          marginRight: '10px',\n          padding: '5px'\n        },\n        placeholder: \"Type your message...\",\n        value: inputMessage,\n        onChange: handleInputChange,\n        onKeyDown: e => {\n          if (e.key === 'Enter' && !e.shiftKey) {\n            e.preventDefault();\n            handleSendMessage();\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          padding: '5px 10px',\n          cursor: 'pointer'\n        },\n        onClick: handleSendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(Task1, \"6qOueb/218nZC9ij6u9Vkk5HhhQ=\");\n_c = Task1;\nexport default Task1;\nvar _c;\n$RefreshReg$(_c, \"Task1\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Task1","_s","inputMessage","setInputMessage","chatMessages","setChatMessages","handleInputChange","e","target","value","handleSendMessage","trim","newMessage","sender","text","botResponse","post","message","botMessage","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","style","border","padding","minHeight","marginBottom","overflowY","map","index","display","flex","marginRight","placeholder","onChange","onKeyDown","key","shiftKey","preventDefault","cursor","onClick","_c","$RefreshReg$"],"sources":["C:/Users/loren/Documents/vscode/Chatbot/Chatbot/client/src/pages/Task1.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Task1 = () => {\r\n  const [inputMessage, setInputMessage] = useState('');\r\n  const [chatMessages, setChatMessages] = useState([]);\r\n\r\n  const handleInputChange = (e) => {\r\n    setInputMessage(e.target.value);\r\n  };\r\n\r\n  const handleSendMessage = async () => {\r\n    if (inputMessage.trim() === '') return;\r\n\r\n    // Add user message to chat\r\n    const newMessage = {\r\n      sender: 'user',\r\n      text: inputMessage.trim(),\r\n    };\r\n    setChatMessages([...chatMessages, newMessage]);\r\n    setInputMessage('');\r\n\r\n    // Simulate bot response (replace with actual API call if integrating with a backend)\r\n    try {\r\n      const botResponse = await axios.post('/chatbot', { message: inputMessage });\r\n      const botMessage = {\r\n        sender: 'bot',\r\n        text: botResponse.data.message,\r\n      };\r\n      setChatMessages([...chatMessages, botMessage]);\r\n    } catch (error) {\r\n      console.error('Error sending message to bot:', error);\r\n      // Handle error if needed\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>This is Task1</h1>\r\n      <p>It starts with a story. Use the chatbot bar below to solve a game about the metaphor!</p>\r\n\r\n      {/* Chat UI */}\r\n      <div style={{ border: '1px solid #ccc', padding: '10px', minHeight: '200px', marginBottom: '10px', overflowY: 'auto' }}>\r\n        {chatMessages.map((message, index) => (\r\n          <div key={index} style={{ marginBottom: '5px' }}>\r\n            <strong>{message.sender === 'user' ? 'You' : 'Bot'}:</strong> {message.text}\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Chat input */}\r\n      <div style={{ display: 'flex' }}>\r\n        <textarea\r\n          style={{ flex: '1', marginRight: '10px', padding: '5px' }}\r\n          placeholder=\"Type your message...\"\r\n          value={inputMessage}\r\n          onChange={handleInputChange}\r\n          onKeyDown={(e) => {\r\n            if (e.key === 'Enter' && !e.shiftKey) {\r\n              e.preventDefault();\r\n              handleSendMessage();\r\n            }\r\n          }}\r\n        />\r\n        <button\r\n          style={{ padding: '5px 10px', cursor: 'pointer' }}\r\n          onClick={handleSendMessage}\r\n        >\r\n          Send\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Task1;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}