{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\loren\\\\Documents\\\\vscode\\\\Chatbot\\\\Chatbot\\\\client\\\\src\\\\pages\\\\Task2.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Task2 = () => {\n  _s();\n  const {\n    index: urlIndex\n  } = useParams();\n  //const { index } = useParams();\n  const giustaImagePath = `/images/${index}/giusta_${index}.png`;\n  const sbagliataImagePath = `/images/${index}/sbagliata_${index}.png`;\n  useEffect(() => {\n    if (urlIndex) {\n      setIndex(Number(urlIndex)); // Aggiorna l'indice quando il parametro URL cambia\n    }\n  }, [urlIndex]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Task2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Bisogna premere l'immagine che pi\\xF9 si alla metafora!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/task3\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: giustaImagePath,\n        alt: `Giusta ${index}`,\n        style: {\n          cursor: 'pointer'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/task2errore\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: sbagliataImagePath,\n        alt: `Sbagliata ${index}`,\n        style: {\n          cursor: 'pointer'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_s(Task2, \"OeP/EU1WzlYWqvfwW4csiSnB1No=\", false, function () {\n  return [useParams];\n});\n_c = Task2;\nexport default Task2;\nvar _c;\n$RefreshReg$(_c, \"Task2\");","map":{"version":3,"names":["React","Link","useParams","jsxDEV","_jsxDEV","Task2","_s","index","urlIndex","giustaImagePath","sbagliataImagePath","useEffect","setIndex","Number","children","fileName","_jsxFileName","lineNumber","columnNumber","to","src","alt","style","cursor","_c","$RefreshReg$"],"sources":["C:/Users/loren/Documents/vscode/Chatbot/Chatbot/client/src/pages/Task2.js"],"sourcesContent":["import React from 'react';\r\nimport { Link, useParams } from 'react-router-dom';\r\n\r\nconst Task2 = () => {\r\n  const { index: urlIndex } = useParams();\r\n  //const { index } = useParams();\r\n  const giustaImagePath = `/images/${index}/giusta_${index}.png`;\r\n  const sbagliataImagePath = `/images/${index}/sbagliata_${index}.png`;\r\n  useEffect(() => {\r\n    if (urlIndex) {\r\n      setIndex(Number(urlIndex)); // Aggiorna l'indice quando il parametro URL cambia\r\n    }\r\n  }, [urlIndex]);\r\n  return (\r\n    <div>\r\n      <h1>Task2</h1>\r\n      <p>Bisogna premere l'immagine che pi√π si alla metafora!</p>\r\n        \r\n      <Link to=\"/task3\">\r\n        <img src={giustaImagePath} alt={`Giusta ${index}`} style={{ cursor: 'pointer' }} />\r\n      </Link>\r\n      <Link to=\"/task2errore\">\r\n        <img src={sbagliataImagePath} alt={`Sbagliata ${index}`} style={{ cursor: 'pointer' }} />\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Task2;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,EAAEC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM;IAAEC,KAAK,EAAEC;EAAS,CAAC,GAAGN,SAAS,CAAC,CAAC;EACvC;EACA,MAAMO,eAAe,GAAG,WAAWF,KAAK,WAAWA,KAAK,MAAM;EAC9D,MAAMG,kBAAkB,GAAG,WAAWH,KAAK,cAAcA,KAAK,MAAM;EACpEI,SAAS,CAAC,MAAM;IACd,IAAIH,QAAQ,EAAE;MACZI,QAAQ,CAACC,MAAM,CAACL,QAAQ,CAAC,CAAC,CAAC,CAAC;IAC9B;EACF,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;EACd,oBACEJ,OAAA;IAAAU,QAAA,gBACEV,OAAA;MAAAU,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACdd,OAAA;MAAAU,QAAA,EAAG;IAAoD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAE3Dd,OAAA,CAACH,IAAI;MAACkB,EAAE,EAAC,QAAQ;MAAAL,QAAA,eACfV,OAAA;QAAKgB,GAAG,EAAEX,eAAgB;QAACY,GAAG,EAAE,UAAUd,KAAK,EAAG;QAACe,KAAK,EAAE;UAAEC,MAAM,EAAE;QAAU;MAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/E,CAAC,eACPd,OAAA,CAACH,IAAI;MAACkB,EAAE,EAAC,cAAc;MAAAL,QAAA,eACrBV,OAAA;QAAKgB,GAAG,EAAEV,kBAAmB;QAACW,GAAG,EAAE,aAAad,KAAK,EAAG;QAACe,KAAK,EAAE;UAAEC,MAAM,EAAE;QAAU;MAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAACZ,EAAA,CAvBID,KAAK;EAAA,QACmBH,SAAS;AAAA;AAAAsB,EAAA,GADjCnB,KAAK;AAyBX,eAAeA,KAAK;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}