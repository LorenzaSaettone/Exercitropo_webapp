{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\loren\\\\Documents\\\\vscode\\\\Chatbot\\\\Chatbot\\\\client\\\\src\\\\pages\\\\Task2.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Task2 = () => {\n  _s();\n  const {\n    index\n  } = useParams();\n  const [imagePaths, setImagePaths] = useState({\n    giustaImagePath: '',\n    sbagliataImagePath: ''\n  });\n  useEffect(() => {\n    // Fetch image paths from the Flask server\n    fetch(`/task2`).then(response => response.json()).then(data => {\n      setImagePaths({\n        giustaImagePath: data.giustaImagePath,\n        sbagliataImagePath: data.sbagliataImagePath\n      });\n    }).catch(error => {\n      console.error('Error fetching image paths:', error);\n    });\n  }, [index]); // Dependency array ensures fetch runs when index changes\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'row',\n      gap: '10px',\n      marginTop: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Task2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Bisogna premere l'immagine che pi\\xF9 si alla metafora!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [imagePaths.giustaImagePath && /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/task3\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: imagePaths.giustaImagePath,\n          alt: `Giusta ${index}`,\n          style: {\n            width: '200px',\n            height: 'auto',\n            cursor: 'pointer'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this), imagePaths.sbagliataImagePath && /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/task2errore\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: imagePaths.sbagliataImagePath,\n          alt: `Sbagliata ${index}`,\n          style: {\n            width: '200px',\n            height: 'auto',\n            cursor: 'pointer'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(Task2, \"bsc07X3jnQ7YBEwFi4sG7CfhKKI=\", false, function () {\n  return [useParams];\n});\n_c = Task2;\nexport default Task2;\nvar _c;\n$RefreshReg$(_c, \"Task2\");","map":{"version":3,"names":["React","useEffect","useState","Link","useParams","jsxDEV","_jsxDEV","Task2","_s","index","imagePaths","setImagePaths","giustaImagePath","sbagliataImagePath","fetch","then","response","json","data","catch","error","console","style","display","flexDirection","gap","marginTop","children","fileName","_jsxFileName","lineNumber","columnNumber","to","src","alt","width","height","cursor","_c","$RefreshReg$"],"sources":["C:/Users/loren/Documents/vscode/Chatbot/Chatbot/client/src/pages/Task2.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Link, useParams } from 'react-router-dom';\r\n\r\nconst Task2 = () => {\r\n  const { index } = useParams();\r\n  const [imagePaths, setImagePaths] = useState({\r\n    giustaImagePath: '',\r\n    sbagliataImagePath: ''\r\n  });\r\n\r\n  useEffect(() => {\r\n    // Fetch image paths from the Flask server\r\n    fetch(`/task2`)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        setImagePaths({\r\n          giustaImagePath: data.giustaImagePath,\r\n          sbagliataImagePath: data.sbagliataImagePath\r\n        });\r\n      })\r\n      .catch(error => {\r\n        console.error('Error fetching image paths:', error);\r\n      });\r\n  }, [index]); // Dependency array ensures fetch runs when index changes\r\n\r\n  return (\r\n    <div style={{ display: 'flex', flexDirection: 'row', gap: '10px', marginTop: '20px' }}>\r\n      <h1>Task2</h1>\r\n      <p>Bisogna premere l'immagine che pi√π si alla metafora!</p>\r\n      <div>\r\n        {imagePaths.giustaImagePath && (\r\n          <Link to=\"/task3\">\r\n            <img src={imagePaths.giustaImagePath} alt={`Giusta ${index}`} style={{ width: '200px', height: 'auto', cursor: 'pointer' }} />\r\n          </Link>\r\n        )}\r\n        {imagePaths.sbagliataImagePath && (\r\n          <Link to=\"/task2errore\">\r\n            <img src={imagePaths.sbagliataImagePath} alt={`Sbagliata ${index}`} style={{ width: '200px', height: 'auto', cursor: 'pointer' }} />\r\n          </Link>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Task2;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}