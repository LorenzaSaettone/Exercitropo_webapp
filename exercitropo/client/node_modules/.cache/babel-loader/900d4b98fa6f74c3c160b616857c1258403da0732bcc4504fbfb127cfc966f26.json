{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\loren\\\\Documents\\\\vscode\\\\Chatbot\\\\Chatbot\\\\Chatbot\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport ImageSlider from \"./ImageSlider\";\nimport laraImg from \"./images/Lara.jpg\";\nimport iconImg from \"./images/musicarteIcon.png\";\nimport queenImg from \"./images/Queen.png\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const images = [laraImg, iconImg, queenImg];\n  const [data, setData] = useState([{}]);\n  const [projectFilepath, setProjectFilepath] = useState('');\n  const [serverResponse, setServerResponse] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      // Send data to the backend\n      console.log(projectFilepath);\n      const response = await axios.post('/get_answer', {\n        projectFilepath\n      });\n      console.log(response);\n      setServerResponse(response.data);\n      console.log('Text sent successfully!', response, response.data);\n    } catch (error) {\n      console.error('Error sending text:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: '10px'\n      },\n      children: /*#__PURE__*/_jsxDEV(ImageSlider, {\n        images: images\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"projectFilepath\",\n        children: \"Inserisci risposta:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"projectFilepath\",\n        value: projectFilepath,\n        onChange: e => {\n          setProjectFilepath(e.target.value);\n          console.log(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), serverResponse && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: serverResponse[0]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 26\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"/LeNf2pSoUtx4PZpXGhH1EA+Uoc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ImageSlider","laraImg","iconImg","queenImg","axios","jsxDEV","_jsxDEV","App","_s","images","data","setData","projectFilepath","setProjectFilepath","serverResponse","setServerResponse","handleSubmit","e","preventDefault","console","log","response","post","error","className","children","style","padding","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","for","type","name","value","onChange","target","_c","$RefreshReg$"],"sources":["C:/Users/loren/Documents/vscode/Chatbot/Chatbot/Chatbot/client/src/App.js"],"sourcesContent":["import React, {useState, useEffect} from 'react'\nimport ImageSlider from \"./ImageSlider\";\nimport laraImg from \"./images/Lara.jpg\";\nimport iconImg from \"./images/musicarteIcon.png\";\nimport queenImg from \"./images/Queen.png\";\nimport axios from 'axios';\n\nfunction App(){\n\n  const images = [\n    laraImg,\n    iconImg,\n    queenImg,\n  ];\n\n  const [data, setData] = useState([{}])\n\n  const [projectFilepath, setProjectFilepath] = useState('');\n  const [serverResponse, setServerResponse] = useState('');\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    try {\n      // Send data to the backend\n      console.log(projectFilepath)\n      const response = await axios.post('/get_answer', { projectFilepath });\n      console.log(response)\n      setServerResponse(response.data);\n      console.log('Text sent successfully!', response, response.data);\n    } catch (error) {\n      console.error('Error sending text:', error);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <div style={{ padding: '10px' }}>\n        <ImageSlider images={images} />\n      </div>\n      <form onSubmit={handleSubmit}>\n        <label for=\"projectFilepath\">Inserisci risposta:</label>\n        <input\n          type=\"text\"\n          name=\"projectFilepath\"\n          value={projectFilepath}\n          onChange={\n            (e) => {setProjectFilepath(e.target.value)\n            console.log(e.target.value)}\n          }\n        />\n        <input type=\"submit\" value=\"Submit\" />\n      </form>\n      {/* Display the server response */}\n      {serverResponse && <div>{serverResponse[0]}</div>}\n    </div>\n  );\n}\n\nexport default App"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}